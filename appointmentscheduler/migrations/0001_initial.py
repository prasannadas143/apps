# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2017-08-21 19:42
from __future__ import unicode_literals

import appointmentscheduler.models
import django.core.validators
from django.db import migrations, models
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AppschedulerBookings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(blank=True, max_length=12, null=True, unique=True)),
                ('calendar_id', models.IntegerField(blank=True, null=True)),
                ('booking_price', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True)),
                ('booking_total', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True)),
                ('booking_deposit', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True)),
                ('booking_tax', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True)),
                ('booking_status', models.CharField(blank=True, max_length=9, null=True)),
                ('payment_method', models.CharField(blank=True, max_length=10, null=True)),
                ('c_name', models.CharField(blank=True, max_length=255, null=True)),
                ('c_email', models.CharField(blank=True, max_length=255, null=True)),
                ('c_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('c_country_id', models.IntegerField(blank=True, null=True)),
                ('c_city', models.CharField(blank=True, max_length=255, null=True)),
                ('c_state', models.CharField(blank=True, max_length=255, null=True)),
                ('c_zip', models.CharField(blank=True, max_length=255, null=True)),
                ('c_address_1', models.CharField(blank=True, max_length=255, null=True)),
                ('c_address_2', models.CharField(blank=True, max_length=255, null=True)),
                ('c_notes', models.TextField(blank=True, null=True)),
                ('cc_type', models.CharField(blank=True, max_length=255, null=True)),
                ('cc_num', models.CharField(blank=True, max_length=255, null=True)),
                ('cc_exp_year', models.TextField(blank=True, null=True)),
                ('cc_exp_month', models.CharField(blank=True, max_length=2, null=True)),
                ('cc_code', models.CharField(blank=True, max_length=255, null=True)),
                ('txn_id', models.CharField(blank=True, max_length=255, null=True)),
                ('processed_on', models.DateTimeField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('locale_id', models.IntegerField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'db_table': 'appscheduler_bookings',
            },
        ),
        migrations.CreateModel(
            name='AppschedulerBookingsServices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tmp_hash', models.CharField(blank=True, max_length=32, null=True)),
                ('booking_id', models.IntegerField(blank=True, null=True)),
                ('service_id', models.IntegerField(blank=True, null=True)),
                ('employee_id', models.IntegerField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('start', models.TimeField(blank=True, null=True)),
                ('start_ts', models.IntegerField(blank=True, null=True)),
                ('total', models.SmallIntegerField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True)),
                ('reminder_email', models.IntegerField(blank=True, null=True)),
                ('reminder_sms', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'appscheduler_bookings_services',
            },
        ),
        migrations.CreateModel(
            name='AppschedulerCalendars',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'appscheduler_calendars',
            },
        ),
        migrations.CreateModel(
            name='AppschedulerCountries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CountryName', models.CharField(max_length=200, unique=True)),
                ('Alpha2', models.CharField(blank=True, max_length=6, null=True)),
                ('Alpha3', models.CharField(blank=True, max_length=6, null=True)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'appscheduler_countries',
            },
        ),
        migrations.CreateModel(
            name='AppschedulerDates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('start_launch', models.DateTimeField(blank=True, null=True)),
                ('end_launch', models.DateTimeField(blank=True, null=True)),
                ('is_dayoff', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'appscheduler_dates',
            },
        ),
        migrations.CreateModel(
            name='AppschedulerEmployees',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emp_name', models.CharField(max_length=100)),
                ('emp_notes', models.TextField(blank=True, null=True)),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('password', models.CharField(max_length=50)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, unique=True)),
                ('avatar', models.ImageField(default='employee/no-img.jpg', upload_to=appointmentscheduler.models.employee_img_location)),
                ('is_subscribed', models.BooleanField(default=False)),
                ('is_subscribed_sms', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'appscheduler_employees',
            },
        ),
        migrations.CreateModel(
            name='AppschedulerEmployeesServices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.IntegerField()),
                ('service_id', models.IntegerField()),
            ],
            options={
                'db_table': 'appscheduler_employees_services',
            },
        ),
        migrations.CreateModel(
            name='AppschedulerFields',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('type', models.CharField(blank=True, max_length=8, null=True)),
                ('label', models.CharField(blank=True, max_length=255, null=True)),
                ('source', models.CharField(blank=True, max_length=6, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'appscheduler_fields',
            },
        ),
        migrations.CreateModel(
            name='AppschedulerMultiLang',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foreign_id', models.IntegerField(blank=True, null=True)),
                ('model', models.CharField(blank=True, max_length=50, null=True)),
                ('locale', models.IntegerField(blank=True, null=True)),
                ('field', models.CharField(blank=True, max_length=50, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('source', models.CharField(blank=True, max_length=6, null=True)),
            ],
            options={
                'db_table': 'appscheduler_multi_lang',
            },
        ),
        migrations.CreateModel(
            name='AppschedulerOptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foreign_id', models.IntegerField()),
                ('key', models.CharField(max_length=255)),
                ('tab_id', models.IntegerField(blank=True, null=True)),
                ('value', models.TextField(blank=True, null=True)),
                ('label', models.TextField(blank=True, null=True)),
                ('type', models.CharField(max_length=6)),
                ('order', models.IntegerField(blank=True, null=True)),
                ('is_visible', models.IntegerField(blank=True, null=True)),
                ('style', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'appscheduler_options',
            },
        ),
        migrations.CreateModel(
            name='AppschedulerRoles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'appscheduler_roles',
            },
        ),
        migrations.CreateModel(
            name='AppschedulerServices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=100, unique=True)),
                ('service_desc', models.CharField(blank=True, max_length=100, null=True)),
                ('service_img', models.ImageField(default='service/no-img.jpg', upload_to=appointmentscheduler.models.service_img_location)),
                ('price', models.DecimalField(decimal_places=2, max_digits=9)),
                ('length', models.SmallIntegerField(default=0)),
                ('before', models.SmallIntegerField(default=0)),
                ('after', models.SmallIntegerField(default=0)),
                ('is_active', models.BooleanField(choices=[(True, 'active'), (False, 'inactive')], default=True)),
                ('emp_service', models.ManyToManyField(blank=True, to='appointmentscheduler.AppschedulerEmployees')),
            ],
            options={
                'db_table': 'appscheduler_services',
            },
        ),
        migrations.CreateModel(
            name='AppschedulerUsers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_id', models.IntegerField()),
                ('email', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('password', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('created', models.DateTimeField()),
                ('status', models.CharField(max_length=1)),
                ('ip', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'db_table': 'appscheduler_users',
            },
        ),
        migrations.CreateModel(
            name='AppschedulerWorkingTimes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foreign_id', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=8, null=True)),
                ('monday_from', models.TimeField(blank=True, null=True)),
                ('monday_to', models.TimeField(blank=True, null=True)),
                ('monday_lunch_from', models.TimeField(blank=True, null=True)),
                ('monday_lunch_to', models.TimeField(blank=True, null=True)),
                ('monday_dayoff', models.CharField(blank=True, max_length=1, null=True)),
                ('tuesday_from', models.TimeField(blank=True, null=True)),
                ('tuesday_to', models.TimeField(blank=True, null=True)),
                ('tuesday_lunch_from', models.TimeField(blank=True, null=True)),
                ('tuesday_lunch_to', models.TimeField(blank=True, null=True)),
                ('tuesday_dayoff', models.CharField(blank=True, max_length=1, null=True)),
                ('wednesday_from', models.TimeField(blank=True, null=True)),
                ('wednesday_to', models.TimeField(blank=True, null=True)),
                ('wednesday_lunch_from', models.TimeField(blank=True, null=True)),
                ('wednesday_lunch_to', models.TimeField(blank=True, null=True)),
                ('wednesday_dayoff', models.CharField(blank=True, max_length=1, null=True)),
                ('thursday_from', models.TimeField(blank=True, null=True)),
                ('thursday_to', models.TimeField(blank=True, null=True)),
                ('thursday_lunch_from', models.TimeField(blank=True, null=True)),
                ('thursday_lunch_to', models.TimeField(blank=True, null=True)),
                ('thursday_dayoff', models.CharField(blank=True, max_length=1, null=True)),
                ('friday_from', models.TimeField(blank=True, null=True)),
                ('friday_to', models.TimeField(blank=True, null=True)),
                ('friday_lunch_from', models.TimeField(blank=True, null=True)),
                ('friday_lunch_to', models.TimeField(blank=True, null=True)),
                ('friday_dayoff', models.CharField(blank=True, max_length=1, null=True)),
                ('saturday_from', models.TimeField(blank=True, null=True)),
                ('saturday_to', models.TimeField(blank=True, null=True)),
                ('saturday_lunch_from', models.TimeField(blank=True, null=True)),
                ('saturday_lunch_to', models.TimeField(blank=True, null=True)),
                ('saturday_dayoff', models.CharField(blank=True, max_length=1, null=True)),
                ('sunday_from', models.TimeField(blank=True, null=True)),
                ('sunday_to', models.TimeField(blank=True, null=True)),
                ('sunday_lunch_from', models.TimeField(blank=True, null=True)),
                ('sunday_lunch_to', models.TimeField(blank=True, null=True)),
                ('sunday_dayoff', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'appscheduler_working_times',
            },
        ),
        migrations.AlterUniqueTogether(
            name='appschedulerworkingtimes',
            unique_together=set([('foreign_id', 'type')]),
        ),
        migrations.AlterUniqueTogether(
            name='appschedulermultilang',
            unique_together=set([('foreign_id', 'model', 'locale', 'field')]),
        ),
        migrations.AlterUniqueTogether(
            name='appscheduleremployeesservices',
            unique_together=set([('employee_id', 'service_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='appschedulercountries',
            unique_together=set([('CountryName',)]),
        ),
    ]
